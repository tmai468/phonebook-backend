{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["dbURL","console","log","axios","get","then","response","data","newPerson","post","request","NumberDisplay","props","searchTerm","persons","setPersons","listIncl","filter","person","name","toLowerCase","includes","map","each","number","onClick","window","confirm","delete","id","p","SuccessMessage","newSuccessName","className","ErrorMessage","newErrorName","newErrorType","SearchFilter","saveSearchInputToNewSearchTerm","value","onChange","AddNewPeople","newName","newNumber","addNewName","saveFormInputToNewName","saveFormInputToNewNumber","onSubmit","type","App","useState","useEffect","personService","personsData","setNewName","setNewSuccessName","setNewErrorName","setNewErrorType","setNewNumber","setNewSearchTerm","event","target","preventDefault","eachObj","existingId","put","resp","concat","catch","error","setTimeout","addedPerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65605e5f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst dbURL = `http://localhost:3001/api/persons`\r\n\r\nconst getAll = () => {\r\n    console.log('getting')\r\n    const request = axios.get(dbURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    console.log('creating')\r\n    const request = axios.post(dbURL, newPerson)\r\n    return request.then(request => request.data)\r\n}\r\n\r\nexport default { getAll, create }","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\n\nconst NumberDisplay = (props) => {\n  const { searchTerm, persons, setPersons } = props\n  // const [ selectedPersonToDel, setSelectedPersonToDel ] = useState({})\n  const listIncl = persons.filter((person)=>{return person.name.toLowerCase().includes(searchTerm)})\n  return (\n    <div>\n      {listIncl.map((each) => {return <div key={each.name}>{each.name} {each.number}<button onClick={() => {\n        // setSelectedPersonToDel(each)\n        if (window.confirm(`Delete ${each.name} ?`)) {\n          axios.delete(`http://localhost:3001/api/persons/${each.id}`)\n          console.log(persons.map(p=>p.id !== each.id))\n          setPersons(persons.filter(p=>p.id !== each.id))\n        }\n      }}>delete</button></div>})}\n    </div>\n  )\n}\nconst SuccessMessage = (props) => {\n  const { newSuccessName } = props\n  if (newSuccessName !== '') {\n    return (\n      <div className=\"success\">Added {newSuccessName}</div>\n    )\n  } else { return null}\n}\nconst ErrorMessage = (props) => {\n  const { newErrorName, newErrorType } = props\n  console.log(newErrorType)\n  if (newErrorName !== '') {\n    if (newErrorType === 'normal') {\n    return (\n      <div className=\"error\">Information of {newErrorName} has already been removed from server</div>\n    )}\n    else {\n      return (\n        <div className=\"error\">{newErrorType}</div>\n      )\n    }\n  } else {\n    return null\n  }\n  // const { newErrorName} = props\n  // if (newErrorName !== '') {\n  //   return (\n  //     <div className=\"error\">Information of {newErrorName} has already been removed from server</div>\n  //   )\n  // } else {\n  //   return null\n  // }\n}\nconst SearchFilter = (props) => {\n  // console.log(props)\n  const { searchTerm, saveSearchInputToNewSearchTerm } = props\n  return (\n  <div>\n  <form>\n      <div>filter shown with <input value={searchTerm} onChange={saveSearchInputToNewSearchTerm}/></div>\n  </form></div>)\n}\nconst AddNewPeople = (props) => {\n  const { newName, newNumber, addNewName, saveFormInputToNewName, saveFormInputToNewNumber } = props\n  return (\n    <div>\n      <form onSubmit={addNewName}>\n        <div>\n          name: <input value={newName} onChange={saveFormInputToNewName}/>\n        </div>\n        <div>number: <input value={newNumber} onChange={saveFormInputToNewNumber}/></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n    // { name: 'Arto Hellas',\n    //   number: '040-1234567' }\n  // ]) \n  useEffect(() => {\n    personService.getAll().then(personsData => setPersons(personsData))\n  }, []\n  )\n  const [ newName, setNewName ] = useState('')\n  const [ newSuccessName, setNewSuccessName ] = useState('')\n  const [ newErrorName, setNewErrorName ] = useState('')\n  const [ newErrorType, setNewErrorType ] = useState('')\n  const [newNumber, setNewNumber ] = useState('')\n  const [searchTerm, setNewSearchTerm] = useState('')\n  const saveFormInputToNewName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const saveFormInputToNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const saveSearchInputToNewSearchTerm = (event) => {\n    setNewSearchTerm(event.target.value)\n  }\n  const addNewName = (event) => {\n    event.preventDefault()\n    if (persons.map((eachObj) => eachObj.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const existingId = persons.filter(eachObj => eachObj.name === newName)[0].id\n        const newPerson = { name: newName,\n                          number: newNumber}\n        console.log(newPerson)\n        axios.put(`http://localhost:3001/api/persons/${existingId}`, newPerson).then(resp => {\n          setPersons(persons.filter(person=>person.id !== resp.data.id).concat(newPerson))\n        }).catch(\n          (error) => {\n            console.log(error.response.data.error)\n            setNewErrorName(newName)\n            setNewErrorType(error.response.data.error)\n            setTimeout(() => {setNewErrorName('')}, 5000)\n            setNewName('')\n            setNewNumber('')\n            // setPersons(persons.filter((eachPerson) => {return eachPerson.name !== newPerson.name}))\n          }\n        )\n      }\n    } else {\n      console.log('here')\n    const newPerson = { name: newName,\n                        number: newNumber,\n                        }\n    console.log(newPerson)\n    personService.create(newPerson).then(addedPerson => {\n      setNewSuccessName(newName)\n      setTimeout(() => {setNewSuccessName('')}, 5000)\n      setPersons(persons.concat(addedPerson))\n      setNewName('')\n      setNewNumber('')\n    })\n    .catch(error => {\n      // console.log('over here')\n      // console.log(error.response.data)\n      setNewErrorName(newName)\n      setNewErrorType(error.response.data.error)\n      setTimeout(() => {setNewErrorName('')}, 5000)\n\n    })\n    // axios.post(dbURL, newPerson)\n    // .then(response => {setPersons(persons.concat(response.data))\n    //   setNewName('')\n    //   setNewNumber('')})\n}\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessMessage newSuccessName={newSuccessName}/>\n      <ErrorMessage newErrorName={newErrorName} newErrorType={newErrorType}/>\n      <SearchFilter searchTerm={searchTerm} saveSearchInputToNewSearchTerm={saveSearchInputToNewSearchTerm}/>\n      <h2>add a new</h2>\n      <AddNewPeople newName={newName} newNumber={newNumber} addNewName={addNewName} saveFormInputToNewName={saveFormInputToNewName} saveFormInputToNewNumber={saveFormInputToNewNumber}/>\n      <h2>Numbers</h2>\n      <NumberDisplay persons={persons} searchTerm={searchTerm} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}